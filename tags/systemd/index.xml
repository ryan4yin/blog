<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>Systemd - 标签 - This Cute World</title><link>https://thiscute.world/tags/systemd/</link><description>Systemd - 标签 - This Cute World</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 28 Jan 2019 20:13:00 +0800</lastBuildDate><atom:link href="https://thiscute.world/tags/systemd/" rel="self" type="application/rss+xml"/><item><title>通过 systemctl 设置自定义 Service</title><link>https://thiscute.world/posts/systemd-basics/</link><pubDate>Mon, 28 Jan 2019 20:13:00 +0800</pubDate><dc:creator>ryan4yin</dc:creator><guid>https://thiscute.world/posts/systemd-basics/</guid><description><![CDATA[<h2 id="前言">前言</h2>
<p>如果要在Linux 上设置一个开机自启，出现问题自动重启，并且有良好日志的程序，比较流行的方法有 <code>supervisord</code>、<code>systemd</code>，除此之外，还有 upstart、runit 等类似的工具。
但是自从 systemd 被 ubuntu、centos 等主流 Linux 发行版应用以来，systemd 渐渐成为主流方案。</p>
<p>如果你需要跨平台(Linux/MacOSX/FreeBSD)的方案，那么建议使用 <code>supervisord</code>，如果只需要支持 Linux 则建议选用 <code>systemd</code>.</p>
<h3 id="配置说明">配置说明</h3>
<p>要自定义一个服务，需要在 <code>/usr/lib/systemd/system/</code> 下添加一个配置文件：<code>&lt;software-name&gt;.service</code></p>
<blockquote>
<p>如果 <code>/usr/lib/systemd/system/</code> 不存在，可考虑使用 <code>/lib/systemd/system/</code> 或 <code>/etc/systemd/system/</code></p>
</blockquote>
<blockquote>
<p><code>ExecXXX</code> 中的命令，均可以正常使用转义字符以及环境变量插值语法，比如用 <code>\</code> 结尾表示换行，用 $Xxx 获取环境变量。</p>
</blockquote>
<p>配置文件的内容说明：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="p">[</span><span class="nx">Unit</span><span class="p">]</span><span class="err">:</span> <span class="err">服务的启动顺序与依赖关系</span>
<span class="nx">Description</span><span class="err">:</span> <span class="err">当前服务的简单描述</span>
<span class="nx">After</span><span class="err">:</span> <span class="err">当前服务（&lt;</span><span class="nx">software-name</span><span class="err">&gt;</span><span class="p">.</span><span class="nx">service</span><span class="err">）需要在这些服务启动后，才启动</span>
<span class="nx">Before</span><span class="err">:</span> <span class="err">和</span> <span class="nx">After</span> <span class="err">相反，当前服务需要在这些服务启动前，先启动</span>
<span class="nx">Wants</span><span class="err">：表示当前服务</span><span class="s2">&#34;弱依赖&#34;</span><span class="err">于这些服务。即当前服务依赖于它们，但是没有它们，当前服务也能正常运行。</span>
<span class="nx">Requires</span><span class="err">:</span> <span class="err">表示</span><span class="s2">&#34;强依赖&#34;</span><span class="err">关系，即如果该服务启动失败或异常退出，那么当前服务也必须退出。</span>


<span class="p">[</span><span class="nx">Service</span><span class="p">]</span> <span class="err">服务运行参数的设置</span>
<span class="nx">Type</span><span class="p">=</span><span class="nx">forking</span>  <span class="err">后台运行的形式</span>
<span class="nx">PIDFile</span><span class="p">=</span><span class="err">/</span><span class="nx">software-name</span><span class="err">/</span><span class="nx">pid</span>   <span class="nx">pid</span><span class="err">文件路径</span>
<span class="nx">EnvironmentFile</span><span class="p">=</span><span class="err">/</span><span class="nx">xxx</span><span class="err">/</span><span class="nx">prod</span><span class="p">.</span><span class="nx">env</span>  <span class="err">通过文件设定环境变量，注意这东西不支持环境变量的插值语法</span> <span class="err">$</span><span class="p">{</span><span class="nx">xxx</span><span class="p">}</span>
<span class="nx">WorkingDirectory</span><span class="p">=</span><span class="err">/</span><span class="nx">xxx</span><span class="err">/</span><span class="nx">xxx</span>    <span class="err">工作目录</span>
<span class="nx">ExecStartPre</span>  <span class="err">为启动做准备的命令</span>
<span class="nx">ExecStart</span>  <span class="err">服务的具体运行命令（对非</span> <span class="nx">workingdirectory</span> <span class="err">的文件，必须用绝对路径！</span>
<span class="nx">ExecReload</span>  <span class="err">重载命令，如果程序支持</span> <span class="nx">HUP</span> <span class="err">信号的话，通常将此项设为</span> <span class="err">`/</span><span class="nx">bin</span><span class="err">/</span><span class="nx">kill</span> <span class="nx">-HUP</span> <span class="err">$</span><span class="nx">MAINPID</span><span class="err">`</span>
<span class="nx">ExecStop</span>  <span class="err">停止命令</span>
<span class="nx">ExecStartPre</span><span class="err">：启动服务之前执行的命令</span>
<span class="nx">ExecStartPost</span><span class="err">：启动服务之后执行的命令</span>
<span class="nx">ExecStopPost</span><span class="err">：停止服务之后执行的命令</span>
<span class="nx">RuntimeDirectory</span><span class="p">=</span><span class="nx">xxxx</span>
<span class="nx">RuntimeDirectoryMode</span><span class="p">=</span><span class="mi">0775</span>
<span class="nx">PrivateTmp</span><span class="p">=</span><span class="nx">True</span>  <span class="err">表示给服务分配独立的临时空间</span>
<span class="nx">RestartSec</span>  <span class="err">自动重启当前服务间隔的秒数</span>
<span class="nx">Restart</span>  <span class="err">定义何种情况</span> <span class="nx">Systemd</span> <span class="err">会自动重启当前服务，可能的值包括</span><span class="nx">always</span><span class="err">（总是重启）、</span><span class="nx">on-success</span><span class="err">、</span><span class="nx">on-failure</span> <span class="err">等</span>
<span class="c"># 程序的 user 和 group</span>
<span class="nx">User</span><span class="p">=</span><span class="nx">ryan</span>
<span class="nx">Group</span><span class="p">=</span><span class="nx">ryan</span>


<span class="err">注意：启动、重载、停止命令全部要求使用绝对路径</span>

<span class="p">[</span><span class="nx">Install</span><span class="p">]</span> <span class="err">定义如何安装这个配置文件，即怎样做到开机启动。</span>
<span class="c"># Target的含义是服务组，表示一组服务。</span>
<span class="nx">WantedBy</span><span class="p">=</span><span class="nx">multi-user</span><span class="p">.</span><span class="nx">target</span>
</code></pre></td></tr></table>
</div>
</div><p><strong>注意，service 文件不支持行内注释！！！注释必须单独一行</strong></p>
<h3 id="type-说明">Type 说明</h3>
<p>Type 感觉是整个配置文件里面最不好理解的一个配置项，它的实际作用就是：<strong>告诉 systemd 你的 Service 是如何启动的</strong></p>
<ol>
<li>
<p><code>Type=simple</code>（默认值）：<code>ExecStart</code> 命令会立即启动你的服务，并且持续运行，不会退出。</p>
</li>
<li>
<p><code>Type=forking</code>：<code>ExecStart</code> 命令会 fork 出你的服务主进程，然后正常退出。使用此 Type 时应同时指定 <code>PIDFile=</code>，systemd 使用它跟踪服务的主进程。</p>
</li>
<li>
<p><code>Type=oneshot</code>：<code>ExecStart</code> 命令。可能需要同时设置 <code>RemainAfterExit=yes</code> 使得 <code>systemd</code> 在服务进程退出之后仍然认为服务处于激活状态</p>
</li>
<li>
<p><code>Type=notify</code>：与 <code>Type=simple</code> 相同，但约定服务会在就绪后向 systemd 发送一个信号，以表明自己已经启动成功。</p>
<ul>
<li>细节：systemd 会创建一个 unix socket，并将地址通过 $NOTIFY_SOCKET 环境变量提供给服务，同时监听该 socket 上的信号。服务可以使用 systemd 提供的 C 函数 <code>sd_notify()</code> 或者命令行工具 <code>systemd-notify</code> 发送信号给 systemd.</li>
<li>因为多了个 notify 信号，所以这一 Type 要比 simple 更精确一点。但是需要服务的配合，</li>
</ul>
</li>
<li>
<p><code>Type=dbus</code>：若以此方式启动，当指定的 BusName 出现在 DBus 系统总线上时，systemd 认为服务就绪。</p>
</li>
<li>
<p><code>Type=idle</code>：没搞明白，不过通常也用不到。</p>
</li>
</ol>
<p>更详细的见 <a href="http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html" target="_blank" rel="noopener noreferrer">Systemd 入门教程：命令篇 - 阮一峰</a>。</p>
<h3 id="配置举例">配置举例</h3>
<p>比如 shadsocks Server Service，的配置文件 <code>ss-server.service</code> 的内容为：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="p">[</span><span class="nx">Unit</span><span class="p">]</span>
<span class="nx">Description</span><span class="p">=</span><span class="nx">shadsocks</span> <span class="nx">server</span>
<span class="nx">After</span><span class="p">=</span><span class="nx">network</span><span class="p">.</span><span class="nx">target</span> <span class="nx">auditd</span><span class="p">.</span><span class="nx">service</span>

<span class="p">[</span><span class="nx">Service</span><span class="p">]</span>
<span class="nx">Type</span><span class="p">=</span><span class="nx">forking</span>
<span class="nx">ExecStart</span><span class="p">=</span><span class="err">/</span><span class="nx">usr</span><span class="err">/</span><span class="nx">local</span><span class="err">/</span><span class="nx">bin</span><span class="err">/</span><span class="nx">ssserver</span> <span class="nx">-c</span> <span class="err">/</span><span class="nx">etc</span><span class="err">/</span><span class="nx">shadsocks</span><span class="p">.</span><span class="nx">json</span> <span class="nx">--user</span> <span class="nx">shadsocks</span> <span class="nx">--pid-file</span> <span class="err">/</span><span class="nx">var</span><span class="err">/</span><span class="nx">run</span><span class="err">/</span><span class="nx">shadsocks</span><span class="p">.</span><span class="nx">pid</span> <span class="nx">-d</span> <span class="nx">start</span>
<span class="nx">ExecStop</span><span class="p">=</span><span class="err">/</span><span class="nx">usr</span><span class="err">/</span><span class="nx">local</span><span class="err">/</span><span class="nx">bin</span><span class="err">/</span><span class="nx">ssserver</span> <span class="nx">-c</span> <span class="err">/</span><span class="nx">etc</span><span class="err">/</span><span class="nx">shadsocks</span><span class="p">.</span><span class="nx">json</span> <span class="nx">--user</span> <span class="nx">shadsocks</span> <span class="nx">--pid-file</span> <span class="err">/</span><span class="nx">var</span><span class="err">/</span><span class="nx">run</span><span class="err">/</span><span class="nx">shadsocks</span><span class="p">.</span><span class="nx">pid</span> <span class="nx">-d</span> <span class="nx">stop</span>
<span class="nx">PIDFile</span><span class="p">=</span><span class="err">/</span><span class="nx">var</span><span class="err">/</span><span class="nx">run</span><span class="err">/</span><span class="nx">shadsocks</span><span class="p">.</span><span class="nx">pid</span>
<span class="nx">Restart</span><span class="p">=</span><span class="nx">always</span>
<span class="nx">RestartSec</span><span class="p">=</span><span class="mi">4</span>

<span class="p">[</span><span class="nx">Install</span><span class="p">]</span>
<span class="nx">WantedBy</span><span class="p">=</span><span class="nx">multi-user</span><span class="p">.</span><span class="nx">target</span>
</code></pre></td></tr></table>
</div>
</div><p>而 enginx 的配置文件 <code>nginx.service</code> 的内容是：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="p">[</span><span class="nx">Unit</span><span class="p">]</span>
<span class="nx">Description</span><span class="p">=</span><span class="nx">The</span> <span class="nx">NGINX</span> <span class="nx">HTTP</span> <span class="nx">and</span> <span class="nx">reverse</span> <span class="nx">proxy</span> <span class="nx">server</span>
<span class="nx">After</span><span class="p">=</span><span class="nx">syslog</span><span class="p">.</span><span class="nx">target</span> <span class="nx">network-online</span><span class="p">.</span><span class="nx">target</span> <span class="nx">remote-fs</span><span class="p">.</span><span class="nx">target</span> <span class="nx">nss-lookup</span><span class="p">.</span><span class="nx">target</span>
<span class="nx">Wants</span><span class="p">=</span><span class="nx">network-online</span><span class="p">.</span><span class="nx">target</span>

<span class="p">[</span><span class="nx">Service</span><span class="p">]</span>
<span class="nx">Type</span><span class="p">=</span><span class="nx">forking</span>
<span class="nx">PIDFile</span><span class="p">=</span><span class="err">/</span><span class="nx">run</span><span class="err">/</span><span class="nx">nginx</span><span class="p">.</span><span class="nx">pid</span>
<span class="nx">ExecStartPre</span><span class="p">=</span><span class="err">/</span><span class="nx">usr</span><span class="err">/</span><span class="nx">sbin</span><span class="err">/</span><span class="nx">nginx</span> <span class="nx">-t</span>
<span class="nx">ExecStart</span><span class="p">=</span><span class="err">/</span><span class="nx">usr</span><span class="err">/</span><span class="nx">sbin</span><span class="err">/</span><span class="nx">nginx</span>
<span class="nx">ExecReload</span><span class="p">=</span><span class="err">/</span><span class="nx">usr</span><span class="err">/</span><span class="nx">sbin</span><span class="err">/</span><span class="nx">nginx</span> <span class="nx">-s</span> <span class="nx">reload</span>
<span class="nx">ExecStop</span><span class="p">=</span><span class="err">/</span><span class="nx">bin</span><span class="err">/</span><span class="nx">kill</span> <span class="nx">-s</span> <span class="nx">QUIT</span> <span class="err">$</span><span class="nx">MAINPID</span>
<span class="nx">PrivateTmp</span><span class="p">=</span><span class="kc">true</span>

<span class="p">[</span><span class="nx">Install</span><span class="p">]</span>
<span class="nx">WantedBy</span><span class="p">=</span><span class="nx">multi-user</span><span class="p">.</span><span class="nx">target</span>
</code></pre></td></tr></table>
</div>
</div><p>为了使用环境变量插值，而使用 sh 启动的 etcd 服务，它的 <code>etcd.service</code> 配置如下:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="p">[</span><span class="nx">Unit</span><span class="p">]</span>
<span class="nx">Description</span><span class="p">=</span><span class="nx">etcd</span> <span class="nx">key-value</span> <span class="nx">store</span>
<span class="nx">Documentation</span><span class="p">=</span><span class="nx">https</span><span class="err">://</span><span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="err">/</span><span class="nx">etcd-io</span><span class="err">/</span><span class="nx">etcd</span>
<span class="nx">After</span><span class="p">=</span><span class="nx">network</span><span class="p">.</span><span class="nx">target</span>

<span class="p">[</span><span class="nx">Service</span><span class="p">]</span>
<span class="nx">Type</span><span class="p">=</span><span class="nx">simple</span>
<span class="c"># EnvironmentFile 不支持使用 ${xxx} 变量插值，这里不适合使用</span>
<span class="c"># EnvironmentFile=/data/etcd.env</span>
<span class="c"># -a 表示传递环境变量</span>
<span class="nx">ExecStart</span><span class="p">=</span><span class="err">/</span><span class="nx">bin</span><span class="err">/</span><span class="nx">bash</span> <span class="nx">-ac</span> <span class="s1">&#39;. /data/etcd.env; /data/bin/etcd&#39;</span>
<span class="nx">Restart</span><span class="p">=</span><span class="nx">always</span>
<span class="nx">RestartSec</span><span class="p">=</span><span class="mi">5</span><span class="nx">s</span>
<span class="nx">LimitNOFILE</span><span class="p">=</span><span class="mi">40000</span>

<span class="p">[</span><span class="nx">Install</span><span class="p">]</span>
<span class="nx">WantedBy</span><span class="p">=</span><span class="nx">multi-user</span><span class="p">.</span><span class="nx">target</span>
</code></pre></td></tr></table>
</div>
</div><p>如果你不需要在 <code>/data/etcd.env</code> 中使用环境变量的插值语法，那可以这样写:</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-toml" data-lang="toml"><span class="p">[</span><span class="nx">Unit</span><span class="p">]</span>
<span class="nx">Description</span><span class="p">=</span><span class="nx">etcd</span> <span class="nx">key-value</span> <span class="nx">store</span>
<span class="nx">Documentation</span><span class="p">=</span><span class="nx">https</span><span class="err">://</span><span class="nx">github</span><span class="p">.</span><span class="nx">com</span><span class="err">/</span><span class="nx">etcd-io</span><span class="err">/</span><span class="nx">etcd</span>
<span class="nx">After</span><span class="p">=</span><span class="nx">network</span><span class="p">.</span><span class="nx">target</span>

<span class="p">[</span><span class="nx">Service</span><span class="p">]</span>
<span class="nx">Type</span><span class="p">=</span><span class="nx">notify</span>
<span class="nx">EnvironmentFile</span><span class="p">=</span><span class="err">/</span><span class="nx">data</span><span class="err">/</span><span class="nx">etcd</span><span class="p">.</span><span class="nx">env</span>
<span class="c"># ExecXXX 的命令中是可以使用 ${Xxx} 插值语法的</span>
<span class="nx">ExecStart</span><span class="p">=</span><span class="err">/</span><span class="nx">data</span><span class="err">/</span><span class="nx">bin</span><span class="err">/</span><span class="nx">etcd</span> <span class="err">\</span>
    <span class="nx">--initial-advertise-peer-urls</span> <span class="nx">http</span><span class="err">://$</span><span class="p">{</span><span class="nx">THIS_IP</span><span class="p">}</span><span class="err">:</span><span class="mi">2380</span> <span class="err">\</span>
    <span class="nx">--listen-peer-urls</span> <span class="nx">http</span><span class="err">://$</span><span class="p">{</span><span class="nx">THIS_IP</span><span class="p">}</span><span class="err">:</span><span class="mi">2380</span> <span class="err">\</span>
    <span class="nx">--advertise-client-urls</span> <span class="nx">http</span><span class="err">://$</span><span class="p">{</span><span class="nx">THIS_IP</span><span class="p">}</span><span class="err">:</span><span class="mi">2379</span> <span class="err">\</span>
    <span class="nx">--listen-client-urls</span> <span class="nx">http</span><span class="err">://$</span><span class="p">{</span><span class="nx">THIS_IP</span><span class="p">}</span><span class="err">:</span><span class="mi">2379</span> <span class="err">\</span>
    <span class="nx">--initial-cluster</span> <span class="s2">&#34;${NAME_1}=http://${HOST_1}:2380,${NAME_2}=http://${HOST_2}:2380,${NAME_3}=http://${HOST_3}:2380&#34;</span>
<span class="nx">Restart</span><span class="p">=</span><span class="nx">always</span>
<span class="nx">RestartSec</span><span class="p">=</span><span class="mi">5</span><span class="nx">s</span>
<span class="nx">LimitNOFILE</span><span class="p">=</span><span class="mi">40000</span>

<span class="p">[</span><span class="nx">Install</span><span class="p">]</span>
<span class="nx">WantedBy</span><span class="p">=</span><span class="nx">multi-user</span><span class="p">.</span><span class="nx">target</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="服务的启动关闭">服务的启动、关闭</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-fallback" data-lang="fallback">systemctl enable ss-server.service  # 启用服务，即开机自动启动
systemctl disable ss-server.service  # 取消服务，取消开机启动

systemctl start ss-server.service   # 启动服务
systemctl stop ss-server.service   # 停止服务

systemctl restart ss-server.service   # 重启服务(stop + start)
systemctl reload ss-server.service   # 服务不 stop，直接加载配置更新等（对应 ExecReload）

# 检查状态
systemctl status ss-server.service -l

systemctl list-units --type=service  # 查看所有服务
</code></pre></td></tr></table>
</div>
</div><h3 id="参考">参考</h3>
<ul>
<li><a href="http://www.ruanyifeng.com/blog/2016/03/systemd-tutorial-commands.html" target="_blank" rel="noopener noreferrer">Systemd 入门教程：命令篇 - 阮一峰</a></li>
<li><a href="http://www.jinbuguo.com/systemd/systemd.exec.html" target="_blank" rel="noopener noreferrer">systemd.exec 中文手册</a></li>
</ul>
]]></description></item></channel></rss>