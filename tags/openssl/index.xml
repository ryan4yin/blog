<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>OpenSSL - 标签 - This Cute World</title><link>https://thiscute.world/tags/openssl/</link><description>OpenSSL - 标签 - This Cute World</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 14 Mar 2022 00:00:00 +0800</lastBuildDate><atom:link href="https://thiscute.world/tags/openssl/" rel="self" type="application/rss+xml"/><item><title>写给开发人员的实用密码学（八）—— 数字证书与 TLS 协议</title><link>https://thiscute.world/posts/about-tls-cert/</link><pubDate>Mon, 14 Mar 2022 00:00:00 +0800</pubDate><author><name>於清樂</name><uri>https://thiscute.world/authors/ryan4yin</uri></author><guid>https://thiscute.world/posts/about-tls-cert/</guid><description><![CDATA[<div class="featured-image">
                <img src="/posts/about-tls-cert/https-secure.webp" referrerpolicy="no-referrer">
            </div><blockquote>
  <p>本文大致是一篇原创文章，但是参考了许多网络资料，都列在文末的「参考」中了。</p>

</blockquote><h2 id="更新记录" class="headerLink">
    <a href="#%e6%9b%b4%e6%96%b0%e8%ae%b0%e5%bd%95" class="header-mark"></a>更新记录</h2><ul>
<li><strong>2021-01-17</strong>: 完成 TLS 协议简介、数字证书介绍、数字证书的申请或生成方法、mTLS 介绍、TLS 协议的破解手段</li>
<li><strong>2022-03-13</strong> ~ <strong>2022-03-14</strong>: 重新整理补充，改写为《写给开发人员的实用密码学（八）——
数字证书与 TLS 协议》，整合进我的实用密码学系列文章中
<ul>
<li>补充 PKI 公钥基础架构及 X509 证书标准介绍</li>
</ul>
</li>
<li>TODO:
<ul>
<li>补充 ALPN 应用层协议协商的介绍</li>
<li>补充 TLS 协议的逆向手段</li>
<li>基于<a href="https://shoujo.ink/2021/11/cfssl-%E6%A0%B8%E5%BF%83%E6%A8%A1%E5%9D%97%E5%88%86%E6%9E%90/" target="_blank" rel="noopener noreferrer">cfssl</a>
详细介绍 PKI 的各项组件</li>
<li>基于 PKI 的应用服务间身份识别技术：<a href="https://github.com/spiffe/spiffe" target="_blank" rel="noopener noreferrer">SPIFF ID</a>
<ul>
<li>SPIFF ID 是云原生领域的标准，<a href="https://shoujo.ink/2021/10/istio-%E5%AE%89%E5%85%A8%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90%E4%B9%8B-pki-%E4%B8%8E%E9%80%9A%E4%BF%A1%E5%AE%89%E5%85%A8/" target="_blank" rel="noopener noreferrer">服务网格项目 Istio 就使用了 SPIFF ID 作为安全命名</a></li>
</ul>
</li>
</ul>
</li>
</ul>
<hr>
<h2 id="preface" class="headerLink">
    <a href="#preface" class="header-mark"></a>零、前言</h2><p>现代人的日常生活中，HTTPS 协议几乎无处不在，我们每天浏览网页时、用手机刷京东淘宝时、甚至每天秀自己绿色的健康码时，都在使用 HTTPS 协议。</p>]]></description></item><item><title>JWT 签名算法 HS256、RS256 及 ES256 及密钥生成</title><link>https://thiscute.world/posts/jwt-algorithm-key-generation/</link><pubDate>Tue, 03 Mar 2020 14:09:46 +0800</pubDate><author><name>於清樂</name><uri>https://thiscute.world/authors/ryan4yin</uri></author><guid>https://thiscute.world/posts/jwt-algorithm-key-generation/</guid><description><![CDATA[<div class="featured-image">
                <img src="/posts/jwt-algorithm-key-generation/jwt.webp" referrerpolicy="no-referrer">
            </div><h1 id="签名算法" class="headerLink">
    <a href="#%e7%ad%be%e5%90%8d%e7%ae%97%e6%b3%95" class="header-mark"></a>签名算法</h1><p>介绍具体的 JWT 签名算法前，先解释一下签名、摘要/指纹、加密这几个名词的含义：</p>
<ol>
<li>数字签名(Digital Signature): 就和我们日常办理各种手续时需要在文件上签上你自己的名字一样，数字签名的主要用途也是用于身份认证。
<ol>
<li>更准确的讲，数字签名可保证数据的三个特性：真实性（未被伪造）、完整性（不存在缺失）、不可否认性（确实是由你本人认可并签名）</li>
</ol>
</li>
<li>数字摘要(digest)/数字指纹(fingerprint): 指的是数据的 Hash 值。</li>
<li>加密算法：这个应该不需要解释，就是对数据进行加密。。</li>
</ol>
<p>数字签名的具体实现，通常是先对数据进行一次 Hash 摘要(SHA1/SHA256/SHA512 等)，然后再使用非对称加密算法(RSA/ECDSA 等)的私钥对这个摘要进行加密，这样得到的结果就是原始数据的一个签名。</p>]]></description></item></channel></rss>