<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>并发 - 标签 - This Cute World</title><link>https://thiscute.world/tags/%E5%B9%B6%E5%8F%91/</link><description>并发 - 标签 - This Cute World</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Fri, 15 Mar 2019 22:34:00 +0800</lastBuildDate><atom:link href="https://thiscute.world/tags/%E5%B9%B6%E5%8F%91/" rel="self" type="application/rss+xml"/><item><title>Python 并发编程：PoolExecutor 篇</title><link>https://thiscute.world/posts/python-concurrency-pool-executor/</link><pubDate>Fri, 15 Mar 2019 22:34:00 +0800</pubDate><author><name>ryan4yin</name></author><guid>https://thiscute.world/posts/python-concurrency-pool-executor/</guid><description>个人笔记，如有疏漏，还请指正。 使用多线程（threading）和多进程（multiprocessing）完成常规的并发需求，在启动的时候 st</description></item><item><title>进程线程协程与并发并行</title><link>https://thiscute.world/posts/process-thread-coroutines-concurrency-parallelism/</link><pubDate>Tue, 23 Jan 2018 16:39:00 +0800</pubDate><author><name>ryan4yin</name></author><guid>https://thiscute.world/posts/process-thread-coroutines-concurrency-parallelism/</guid><description>个人笔记，不保证正确。 一、进程 Process：（并行运算，分布式）每一个进程，都可以看作是一个完整的 Program，它有自己完全独立的内容。</description></item></channel></rss>