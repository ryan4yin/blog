<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>总结 - 标签 - Ryan4Yin's Space</title><link>https://ryan4yin.space/tags/%E6%80%BB%E7%BB%93/</link><description>总结 - 标签 - Ryan4Yin's Space</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>xiaoyin_c@qq.com (ryan4yin)</managingEditor><webMaster>xiaoyin_c@qq.com (ryan4yin)</webMaster><lastBuildDate>Mon, 03 Jan 2022 14:50:00 +0800</lastBuildDate><atom:link href="https://ryan4yin.space/tags/%E6%80%BB%E7%BB%93/" rel="self" type="application/rss+xml"/><item><title>2021 年年终总结</title><link>https://ryan4yin.space/posts/2021-summary/</link><pubDate>Mon, 03 Jan 2022 14:50:00 +0800</pubDate><author>作者</author><guid>https://ryan4yin.space/posts/2021-summary/</guid><description><![CDATA[<blockquote>
<p>更新：2022/1/22</p>
</blockquote>
<h2 id="闲言碎语">闲言碎语</h2>
<p>一晃一年又是过去了，这个新年，全球疫情再创新高，圣诞节后美国单日新增更是直接突破 50 万直逼 60 万大关，国内也有西安管理不力导致民众忍饥挨饿。</p>
<p>新冠已经两年多了啊。</p>
<p>言归正传，今年年初从 W 公司离职后，我非常幸运地进了现在的公司——大宇无限，在融入大宇的过程中也是五味杂陈。
不过总体结果我自己还是挺满意的，目前工作已经步入正轨，也发现了非常多的机会，大宇基础设施领域仍然大有可为。</p>
<p>一些重要事情还是没怎么想通，不过毕竟风口上的猪都能飞，今年小小努力了一把，大部分时间仍然随波逐流，却也渐入佳境。</p>
<h2 id="生活">生活</h2>
<ul>
<li>加入了我司的冲浪小分队，第一次冲浪、海边烧烤</li>
<li>跟两个堂弟一起穿越深圳东西冲海岸线，风景非常棒，不过路上也是又热又渴</li>
<li>定期团建，跟 SRE 小伙伴公款吃喝，今年下馆子次数估计是我去年的七八倍</li>
<li>又买了双轮滑鞋，学会了倒滑、压步转向，复习了大学时学过的若干基础技巧</li>
<li>今年只看了一部电影——《寻龙传说》，片尾曲超好听。</li>
<li>各种巧合下，意外发现初中同学住得离我 1km 不到，在他家吃了顿家乡菜，还有杨梅酒，味道非常棒！还有回甘强烈的城步青钱柳茶，让我念念不忘。</li>
</ul>
<h2 id="读书">读书</h2>
<ul>
<li>年初辞职后游山玩水，心思稍微安定了些，看了大半本《走出荒野》。</li>
<li>6 月份社区组织打新冠疫苗时，在等候室看了本《青春驿站——深圳打工妹写真》，讲述八九十年代打工妹的生活。很真实，感情很细腻。</li>
<li>年末二爷爷去世，参加完葬礼后，心态有些变化，看完了大一时买下的《月宫 Moon Palace》，讲述主角的悲剧人生。</li>
<li>其余大部分业余时间，无聊，又不想学点东西，也不想运动，于是看了非常多的网络小说打发时间。</li>
</ul>
<h2 id="音乐">音乐</h2>
<p>年初辞职后，练了一段时间的竹笛跟蓝调口琴，但后来找到工作后就基本沉寂了。</p>
<p>总的来说还是原地踏步吧。</p>
<h2 id="工作---我在大宇无限的这一年">工作 - 我在大宇无限的这一年</h2>
<p>3 月份刚进大宇的我充满好奇，但也小心谨慎，甚至有点不敢相信自己能进到一家这么棒的公司，感觉自己运气爆棚。
毕竟大宇无论是同事水平还是工作氛围，亦或是用户体量，相比我上家公司都是质的差别。</p>
<p>之后慢慢熟悉工作的内容与方法，leader 尽力把最匹配我兴趣的工作安排给我，帮我排疑解难，同时又给我极大的自主性，真的是棒极了。</p>
<p>然而自主性高带来的也是更高的工作难度，遇到困难时也曾手忙脚乱、迷茫、甚至自我怀疑，很担心是不是隔天就得跑路了&hellip;（是的我抗压能力有点弱）
但好在我终究还是能调节好心态，负起责任，一步步把工作完成。
中间有几次工作有延误时，leader 还陪我加班，事情干完后又带我去吃大餐犒劳自己，真的超级感谢他的帮助与支持。</p>
<p>这样经历了几个项目的洗礼后，现在我终于能说自己是脚踏实地了，心态从「明天是不是得提桶跑路」转变成了「哇还有这个可以搞，那个 ROI 也很高，有好多有趣的事可以做啊」，我终于能说自己真正融入了大宇无限这家公司，成为了它的一员。</p>
<p>回看下了 2020 年的总结与展望，今年实际的进步，跟去年期望的差别很大。最初的目标大概只实现了 10%，但是接触到了许多意料之外的东西，总体还是满意的：</p>
<ul>
<li>熟悉了新公司的文化与工作方式，这感觉是个很大的收获，我的工作方式有了很大的改善</li>
<li>接触并且熟悉了新公司的 AWS 线上环境
<ul>
<li>负责维护线上 Kubernetes 管理平台，第一次接触到的线上集群峰值 QPS 就有好几万。从一开始的小心翼翼，到现在也转变成了老手，这算是意义重大吧</li>
<li>使用 python 写了几个 Kubernetes 管理平台的服务，这也是我第一次写线上服务，很有些成就感</li>
<li>下半年在 AWS 成本的分析与管控上花了很多精力，也有了一些不错的成果，受益匪浅</li>
<li>学会了 Nginx 的简单使用，刚好够用于维护公司先有的 Nginx 代理配置</li>
</ul>
</li>
<li>主导完成了「新建 K8s 集群，将服务迁移到新集群」。虽然并不是一件很难的事，但这应该算是我 2021 年最大的成就了。
<ul>
<li>升级过程中也是遇到了各种问题，第一次升级迁移时我准备了好久，慌的不行，结果升级时部分服务还是出了问题，当时脑子真的是个懵的，跟 leader 搞到 1 点多后还是没解决，回退到了旧集群，升级失败。之后通过测试确认到是某个服务扩缩容震荡导致可用率无法恢复，尝试通过 HPA 的 behavior 来控制扩缩容速率，又意外触发了 K8s HPA 的 bug 把集群控制面搞崩了&hellip; 再之后把问题都确认了，第二次尝试升级，又是有个别服务可用率抖动，调试了好几天。那几天神经一直紧绷，每天早上都是被服务可用率的告警吵醒的。跨年的那天晚上业务量上涨，我就在观察服务可用率的过程中跨年了。这样才终于完成了 K8s 集群的升级，期间各位同事也有参与帮忙分析排查各种问题，非常感谢他们，还有努力的我自己。</li>
</ul>
</li>
<li>随便写了几个 go 的 demo，基本没啥进步</li>
<li>学了一个星期的 rust 语言，快速看完了 the book，用 rust 重写了个 video2chars</li>
<li>学习了 Linux 容器的底层原理：cgroups/namespace 技术，并且用 go/rust 实现了个 demo</li>
<li>学习了 Linux 的各种网络接口、Iptables</li>
<li>熟悉了 PromQL/Grafana，现在也能拷贝些 PromQL 查各种数据了</li>
</ul>
<p>如果要给自己打分的话，那就是「良好」吧。因为并没有很强的进取心，所以出来的结果也并不能称之为「优秀」。</p>
<h2 id="技术方面的感受">技术方面的感受</h2>
<ul>
<li>Istio 服务网格：体会到了它有点重，而且它的发展跟我们的需求不一定匹配
<ul>
<li>Sidecar 模式的成本比较高，在未调优的情况下，它会给服务带来 1/3 到 1/4 的成本提升，以及延迟上升</li>
<li>比如切量权重固定为 100（新版本将会放宽限制），不支持 pod 的 warm up（社区已经有 PR，持续观望吧）</li>
<li>而它重点发展的虚拟机支持我们却完全不需要</li>
<li>一直在思考是持续往 Istio 投入，还是换其他的方案</li>
</ul>
</li>
<li>服务网格仍然在快速发展，未来的趋势应该是 eBPF + Envoy + WASM
<ul>
<li>Cilium 推出的基于 eBPF 的 Service Mesh 是一个新趋势（它使用高级特性时会退化成 Per Node Proxy 模式），成本、延迟方面都有望吊打 Sidecar 模式的其他服务网格，是今年服务网格领域的大新闻。</li>
<li>我们曾尝试使用中心化网关来替代 Sidecar 以降低成本。但是跨区流量成本、HTTP/gRPC 多协议共存，这些都是挑战。而且这也并不是社区的最佳实践，现在我觉得维持 Sidecar 其实反而能提升资源利用率，我们的集群资源利用率目前很低。如果能把控好，这部分成本或许是可以接受的。</li>
</ul>
</li>
<li>K8s 集群的日志方面，我们目前是使用自研的基于 gelf 协议的系统，但是问题挺多的
<ul>
<li>从提升系统的可维护性、易用性等角度来说，loki 是值得探索下的</li>
</ul>
</li>
<li>K8s 集群管理方面，觉得集群的升级迭代，可以做得更自动化、更可靠。明年可以在多集群管理这个方向上多探索下。</li>
<li><a href="https://kubernetes.io/docs/tasks/configure-pod-container/quality-service-pod/" target="_blank" rel="noopener noreferrer">Pod 服务质量</a>：对非核心服务，可以适当调低 requests 的资源量，而不是完全预留(<code>Guaranteed</code>)，以提升资源利用率。</li>
<li>官方的 HPA 能力是不够用的，业务侧可能会需要基于 QPS/Queue 或者业务侧的其他参数来进行扩缩容，需要持续关注 <a href="https://github.com/kedacore/keda" target="_blank" rel="noopener noreferrer">KEDA</a> 这个项目。</li>
<li>成本控制方面，体会到了 ARM 架构以及 Spot 竞价实例的好处</li>
<li>跨区流量成本有很大的潜在优化空间
<ul>
<li>跨区流量成本是在两边都会收费，而且不仅涉及 Kubernetes 集群内服务间的调用，还会涉及对 RDS/ES/ElastiCache/EC2 等其他资源的调用。</li>
</ul>
</li>
<li>今年各云厂商故障频发，没有<strong>跨 region 的服务迁移</strong>就会很难受，需要持续关注下 <a href="https://github.com/karmada-io/karmada" target="_blank" rel="noopener noreferrer">karmada</a> 这类多集群管理方案。
<ul>
<li>Google 账号系统宕机</li>
<li>Fastly CDN 故障</li>
<li>Facebook 故障</li>
<li>AWS 更是各种可用区故障，12/7 的故障导致 AWS 大部分服务都崩了。因此我们 SRE 今年经常是救各种大火小火&hellip;</li>
</ul>
</li>
<li>Rust/Go/WASM 蓬勃发展，未来可期。</li>
<li>AI 落地到各个领域，影响到了我们日常使用的语音导航、歌声合成、语音合成等多个领域，当然也包括与 SRE 工作相关的场景：AIOps</li>
</ul>
<h2 id="2022-年的展望">2022 年的展望</h2>
<h3 id="技术侧">技术侧</h3>
<p>今年的展望写得更聚焦一些，争取能实现 50%，就是很大的突破了。</p>
<ol>
<li>熟练掌握 Go/Rust 语言，并分别用于至少两个项目中
<ol>
<li>打铁还需自身硬，编码能力是基础中的基础。</li>
</ol>
</li>
<li>深入学习如下技术
<ol>
<li>Kubernetes 源码</li>
</ol>
</li>
<li>网络技术
<ol>
<li>服务网格 Istio</li>
<li>代理工具 Envoy/APISIX</li>
<li>网络插件 Cilium + eBPF</li>
</ol>
</li>
<li>AWS K8s 成本与服务稳定性优化
<ol>
<li>节约跨可用区/跨域的流量成本</li>
<li>K8s 新特性：<a href="https://kubernetes.io/docs/concepts/services-networking/topology-aware-hints/" target="_blank" rel="noopener noreferrer">Topology Aware Hints</a></li>
<li>Istio: <a href="https://istio.io/latest/docs/tasks/traffic-management/locality-load-balancing/" target="_blank" rel="noopener noreferrer">Locality Load Balancing</a></li>
<li>实例类型优化：
<ol>
<li>使用更合适的实例类型</li>
<li>使用 ARM 架构机型，降本增效</li>
</ol>
</li>
<li>推广 GRPC 协议</li>
</ol>
</li>
<li>打通本地开发环境与云上的运行环境：
<ol>
<li><a href="https://github.com/nocalhost/nocalhost" target="_blank" rel="noopener noreferrer">nocalhost</a></li>
</ol>
</li>
<li>探索新技术与可能性（优先级低）
<ol>
<li>基于 Kubernetes 的服务平台，未来的发展方向
<ol>
<li>kubevela</li>
<li>buildpack</li>
<li>是否应该推进 gitops</li>
<li>openkruise</li>
</ol>
</li>
<li>Serverless 平台的进展
<ol>
<li>Knative</li>
<li>OpenFunction</li>
</ol>
</li>
<li>跨集群的应用部署、容灾
<ol>
<li>karmada</li>
</ol>
</li>
<li>机器学习、深度学习技术：想尝试下将 AI 应用在音乐、语音、SRE 等我感兴趣的领域，即使是调包也行啊，总之想出点成果&hellip;</li>
</ol>
</li>
</ol>
<p>可以预料到明年 SRE 团队有超多的机会，这其中我具体能负责哪些部分，又能做出怎样的成果，真的相当期待~</p>
<h2 id="生活侧">生活侧</h2>
<ul>
<li>运动：
<ul>
<li>把轮滑练好，学会点花样吧，每个月至少两次。</li>
<li>进行三次以上的次短途旅行，东西冲穿越可以再来一次。</li>
</ul>
</li>
<li>音乐：
<ul>
<li>再一次学习乐理&hellip;</li>
<li>midi 键盘买了一直吃灰，多多练习吧</li>
<li>买了个 Synthesizer V  Stduio Pro + 「青溯 AI」，新的一年想学下调教，翻唱些自己喜欢的歌。</li>
</ul>
</li>
<li>阅读：清单如下，一个月至少读完其中一本。
<ul>
<li>文学类：
<ul>
<li>《人间失格》：久仰大名的一本书，曾经有同学力荐，但是一直没看。</li>
<li>《生命最后的读书会》：或许曾经看过，但是一点印象都没了</li>
<li>《百年孤独》：高中的时候读过一遍，但是都忘差不多了</li>
<li>《霍乱时期的爱情》</li>
<li>《苏菲的世界》：据说是哲学启蒙读物，曾经看过，但是对内容完全没印象了。</li>
<li>《你一生的故事》：我也曾是个科幻迷</li>
<li>《沈从文的后半生》</li>
<li>《我与地坛》</li>
<li>《将饮茶》</li>
<li>《吾国与吾民 - 林语堂》</li>
<li>《房思琪的初恋乐园》</li>
</ul>
</li>
<li>人文社科
<ul>
<li>《在生命的尽头拥抱你-临终关怀医生手记》：今年想更多地了解下「死亡」</li>
<li>《怎样征服美丽少女》：哈哈</li>
<li>《爱的艺术》</li>
<li>《社会心理学》</li>
<li>《被讨厌的勇气》</li>
<li>《人体简史》</li>
<li>《科学革命的结构》</li>
<li>《邓小平时代》</li>
<li>《论中国》</li>
<li>《刘擎西方现代思想讲义》</li>
<li>《时间的秩序》</li>
<li>《极简宇宙史》</li>
<li>《圆圈正义-作为自由前提的信念》</li>
<li>《人生脚本》</li>
</ul>
</li>
<li>技术类
<ul>
<li>《复杂》</li>
<li>《SRE - Google 运维解密》</li>
<li>《凤凰项目：一个 IT 运维的传奇故事》</li>
<li>《人月神话》</li>
<li>《绩效使能：超越 OKR》</li>
<li>《奈飞文化手册》</li>
<li>《幕后产品-打造突破式思维》</li>
<li>《深入 Linux 内核架构》</li>
<li>《Linux/UNIX 系统编程手册》</li>
<li>《重构 - 改善既有代码的设计》</li>
<li>《网络是怎样连接的》：曾经学习过《计算机网络：自顶向下方法》，不过只学到网络层。就从这本书开始重新学习吧。</li>
</ul>
</li>
</ul>
</li>
</ul>
<h2 id="结语">结语</h2>
<p>2021 年初朋友与我给自己的期许是「拆破玉笼飞彩凤，顿开金锁走蛟龙」，感觉确实应验了。</p>
<p>今年我希望不论是在生活上还是在工作上，都能「更上层楼」~</p>
]]></description></item><item><title>2020 年年终总结</title><link>https://ryan4yin.space/posts/2020-summary/</link><pubDate>Sat, 12 Dec 2020 23:45:00 +0800</pubDate><author>作者</author><guid>https://ryan4yin.space/posts/2020-summary/</guid><description><![CDATA[<h2 id="闲言碎语">闲言碎语</h2>
<p>一晃一年又过去了，今年可真是魔幻的一年，口罩带了一年没能摘下来，美国疫情感染人数 1500 万。</p>
<p>上面这段话要是让去年的我看到了，没准都以为今年真的生化危机了hhh&hellip;</p>
<p>言归正传，从去年 6 月底入职，到现在有一年半了，这一年半学到的东西真的非常多，完全重塑了我的技术栈。现在我的整个技术栈，基本都是围绕着云原生这一块发展了。</p>
<h2 id="活动">活动</h2>
<p>今年也参加了几个技术沙龙，有些收获，但是没去年那么新奇了，主要是很多东西自己已经懂了hhh。大概有这么几个活动：</p>
<ol>
<li>2019 年腾讯蓝鲸第5届运维技术沙龙：在深圳腾讯大厦参加的，点心和咖啡很棒，讲的东西里，腾讯自己分享的「研发运维一体化平台」比较有收获，我收藏了那一份 PPT</li>
<li>Rancher - 企业云原生的探索与落地：去年参加 Rancher 的沙龙觉得很高大上，因为自己很多东西都不懂。但是今年来听，明显就感觉他们讲的很基础，对我没什么价值了。也侧面说明我确实进步了非常多哈哈。</li>
<li>2020 PyconChina 深圳场：额，也觉得没什么干货，好几个都是在推销自家的产品（Azure AI 平台和一个 Django 写的低代码平台），有个讲 Nix 包管理的大佬但是没讲好，后面我们就直接溜了&hellip;</li>
</ol>
<p>另外就是，今年心血来潮买了四张 Live House 的演出票，体验下来觉得钱花得很值，给我充值了不少正能量。</p>
<ol>
<li>景德镇文艺复兴《小歌行》：这是我超级喜欢的一个乐队，演出效果超棒！听到了完整的故事，而且见到了九三姑娘本人，太高兴了！</li>
<li>徐海俏 - 游离片刻：这位歌手我之前其实没接触过，但是听了下她的《空》发现很不错很帅气，就买了。但是整场下来感觉俏俏状态不佳，有点唱不动的感觉。中场问歌迷们有没有带野格酒，末了又问深圳现在能游泳么哈哈，是个很随性的歌手。后面可能还真游泳去了。</li>
<li>夏小虎 - 逝年：这是个民谣歌手，以前上大学的时候听过，只有吉他和人声，其实是有些伤感的歌。因为我最近状态很好，我去之前还担心氛围不适合我。然后夏小虎说开心最重要，带了个乐队来伴奏，架子鼓就是灵魂，整个演出都因鼓点而欢快了起来。效果也非常棒！</li>
<li>时光胶囊乐队：这也是一个国风后摇乐队，在一个深圳福田一个小酒吧「红糖罐上步店」演出的，比较简陋，人也不多，就四五十人的样子（出乎意料）。但是演出效果很棒，《旅途》《忆长安》《磐石》都非常好听。尤其是在这样的场合唱《我不知道你的名字》，挺有感触的。</li>
</ol>
<h2 id="技术能力总结">技术能力总结</h2>
<p>今年我的工作重点有这么几个：</p>
<ol>
<li>重构及维护 CI/CD 代码，让它能在多个产品线上复用</li>
<li>云上环境管理：今年熟悉了阿里云这一套东西，并且用上了自动化工具对云上环境进行管理。
<ul>
<li>一开始是使用 terraform，但是 terraform 的 hcl 语法不够灵活，最近切换到了 pulumi+python，不得不说真香。目前云上的资源及配置 95% 都完全用 pulumi 管理了（还剩大概 5% 因为各种原因，需要手动配置）。</li>
</ul>
</li>
<li>kubernetes云原生: 今年我在这个领域的进步最大，熟悉了 k8s/istio/flagger/vault/prometheus/helm/traefik 等等。不过目前这里面大部分工具还停留在「会用」的状态。</li>
<li>服务器虚拟化系统从 vSphere 切换到 PVE
<ul>
<li>VMware 的 vCenter 吃的资源太多，而且还不能自动扩缩容硬盘，Python SDK 也超难用。因此我在公司尝试使用 PVE 替换 vSphere 这一套，效果很不错。</li>
<li>PVE+pulumi/terraform+cloudinit 能实现自动化部署虚拟机，自动配置网络、账号及SSH密钥、自动扩缩容硬盘，非常方便！</li>
<li>而且 PVE 不收费，去中心化，一套用下来舒服太多了。只是 pve+cloud-init 门槛稍微高一点，需要一定时间去熟悉。</li>
</ul>
</li>
<li>CI/CD 系统：基于 Jenkins 的 CI/CD 在我司各种水土不服，小毛病不断。Jenkins 本身就存在单点故障，不适合云原生，加上 Jenkinsfile 有学习成本，而且不方便复用，我就想把 Jenkins 换掉。我在这一年里调研了大量的开源 CI/CD 工具，都各有不足。主要还是因为我们当下的 Jenkins 承载了太多的功能，已经是一个CI/CD、自动化测试、自动化运维平台了，另一方面公司后端的流水线还存在依赖关系，需要进行复杂的编排。
<ul>
<li>目前我就找到 Argo Workflows 的功能很符合我们的需求，目前正在尝试迁移一部分功能到 Argo Workflows 试用。</li>
<li>因为 argo 的 UI 和 jenkins 差别过大，暂定仍以 jenkins 为前端，通过 python 将任务分派给 argo 运行。这样 argo 对使用者而言是隐形的，用户体验基本上没区别。</li>
</ul>
</li>
<li>杂事：修水电、修服务器、组装办公电脑、搬机房&hellip;</li>
</ol>
<h2 id="今年在技术方面的感受">今年在技术方面的感受</h2>
<ol>
<li>Podman/Skopeo/Buildah/Kaniko 等技术进一步发展，正在逐渐蚕食 Docker 的地盘.
<ol>
<li>kubernetes 已经弃用 docker-shim，直接对接 containerd，下一步应该是彻底切换到 CRI-O。</li>
</ol>
</li>
<li>Istio 1.5 合并为单体架构效果很明显，各微信公众号三天两头就讲服务网格，服务网格是毋庸置疑的未来</li>
<li>阿里云的 OAM 进一步发展，目前阿里基于 OAM 研发的 Kubevela 致力于封装 Kubernetes 的功能，让小白也能用上 Kubernetes。而这同时还能保留 k8s 完整的能力，值得期待。</li>
<li>云上安全越来越引起重视了，目前 CNCF 社区上容器安全相关的项目在快速发展。包括镜像安全/安全容器(kata containers)等。</li>
<li>使用 Kubernetes 来管理数据库已经是大趋势，毕竟成本优势太明显了。
<ul>
<li>很多公司已经在使用 docker 运行数据库，毕竟性能没啥损失，就能方便很多。但是仍然手动搭建集群，也不使用分布式存储。</li>
<li>目前好像只有大厂如阿里京东才有这个实力，使用 kubernetes 和分布式存储来跑数据库。容器化的分布式存储系统维护(如 ceph)，其中的难点我目前还不是很清楚，不过无外乎性能、稳定性、故障恢复这些。</li>
</ul>
</li>
</ol>
<h2 id="明年的展望">明年的展望</h2>
<ol>
<li>Go 语言必须学起来，今年入门了两遍语法，但是没写过啥东西，又忘差不多了。</li>
<li>要进一步熟悉 k8s/istio/flagger/vault/prometheus/helm/traefik/caddy 这些工具，会用还不够，要深入底层。</li>
<li>深入学习计算机网络 + Linux 网络 + Kubernetes 网络！这非常重要。</li>
<li>学习 Podman/Docker 的底层原理，学习 katacontainers 等安全容器技术。</li>
<li>为 kubevela/dapr/knative 等云原生项目做一些贡献，要参与到开源中去。</li>
<li>掌握 Argo Workflows/tekton，将 CI/CD 搬到 k8s 上去。</li>
<li>学习设计模式</li>
<li>有机会的话，熟悉下分布式存储、分布式数据库。这方面我目前还相当欠缺。</li>
<li>学习 KVM 虚拟化</li>
</ol>
<p>如果学（xian）有（de）余（dan）力（teng）的话，也可以考虑搞搞下面这几个：</p>
<ol>
<li>rust 语言：rust 通过 owner+lifetime 实现内存的智能管理，性能很高，而且编译器提示非常友好，值得一学。</li>
<li>机器学习/深度学习: 这个领域可是当下的大热门，可以用 python/julia 玩一玩，顺便补一补微积分线代概率论。。</li>
<li>《编程语言实现模式》：嗯，希望能自己造轮子，写些简单的 parser。</li>
<li>elixir: ruby 语法+ erlang 并发模型(actor), 如果有时间的话，也可以玩玩，了解下原生分布式的函数式语言的特点。</li>
</ol>
<p>回看了下去年的总结，发现我 go/c# 都没学多少，设计模式也没动，python 还在原地踏步hhh&hellip; 去年的展望很多都没实现。</p>
<p>不过云原生这一块倒是进步很快，总体很满意今年的成果哈哈~</p>
<p>明年加油！</p>
]]></description></item></channel></rss>